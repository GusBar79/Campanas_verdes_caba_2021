#- retornará un único valor: el número de filas
df %>% summarise(NN = n())  #- retornará un único valor: el número de filas
#- retornará un único valor: la media global de la v. "lifeExp"
df %>% summarise(media = mean(lifeExp))
#- retornará un único valor: el número de filas
df %>% summarise(NN = n())  #- retornará un único valor: el número de filas
#- retornará un único valor: la desviación típica de la v. "lifeExp"
df %>% summarise(desviacion_tipica = sd(lifeExp))
#- retornará un único valor: el máximo de la variable "pop"
df %>% summarise(max(pop))
#- retornará 2 valores: la media y sd de la v. "lifeExp"
df %>% summarise(mean(lifeExp), sd(lifeExp))
#- media de cada una de las 6 variable. las 2 primeras son texto (en realidad son factores, lo puedes ver con str(df))
aa <- df %>% summarise_all(mean)
#- media de cada una de las 6 variable. las 2 primeras son texto (en realidad son factores, lo puedes ver con str(df))
df %>% summarise_all(mean)
#- media de cada una de las 6 variable. las 2 primeras son texto (en realidad son factores, lo puedes ver con str(df))
df %>% summarise_all(mean)
#- media y sd de las 6 variable. las 2 primeras son factores (*** WTF !!!!)
df %>% summarise_all(funs(mean, sd) )
df %>% group_by(continent) %>%  summarise(NN = n())
df %>%
filter(year %in% c(1952, 2007)) %>%
group_by(continent, year) %>%
summarise_at(vars(lifeExp, gdpPercap), funs(mean, median)  )
ejerc <- df |>
group_by(continent)
ejerc
ejerc <- df |>
group_by(continent, year)
ejerc <- df |>
group_by(continent, year) |>
summarise(mean(lifeExp))
ejerc
View(ejerc)
ejerc <- df |>
group_by(continent, year) |>
summarise(mean(lifeExp)) |>
ungroup()
ejerc
ejerc <- df |>
filter(year %in% c(1952:2007))
ejerc <- df |>
filter(year %in% c(1952,2007))
ejerc <- df |>
filter(year %in% c(1952,2007)) |>
group_by(continent, year) |>
summarise(mean(lifeExp)) |>
ungroup()
ejerc
espa <- df |>
filter(country == "Spain")
espa
espa <- df |>
filter(country == "Spain") |>
select(lifeExp)
espa
espa <- df |>
filter(country == "Spain") |>
select(year, lifeExp)
espa
espa <- df |>
filter(country == "Spain") |>
select(year, lifeExp) |>
mutate(difere = lifeExp - lag(lifeExp))
espa
espa <- df |>
filter(country == "Spain") |>
select(year, lifeExp) |>
mutate(difere = lifeExp - lag(lifeExp)) |>
mutate(firereacu = if_else(is.na(difere), 0, lifeExp)))
espa <- df |>
filter(country == "Spain") |>
select(year, lifeExp) |>
mutate(difere = lifeExp - lag(lifeExp)) |>
mutate(firereacu = if_else(is.na(difere), 0, lifeExp))
espa
df %>%
group_by(country) %>%
select(country, year, lifeExp) %>%
mutate(lifeExp_gain_cada_lustro = lifeExp - lag(lifeExp)) %>%
#--- 2 filas nuevas
mutate(lifeExp_gain_cada_lustro2 = if_else(is.na(lifeExp_gain_cada_lustro), 0, lifeExp_gain_cada_lustro)) %>%
mutate(lifeExp_gain_acumulado = cumsum(lifeExp_gain_cada_lustro2)) %>%
filter(country == "Spain")
espa <- df |>
filter(country == "Spain") |>
select(year, lifeExp) |>
mutate(difere = lifeExp - lag(lifeExp)) |>
mutate(firereacu = if_else(is.na(difere), 0, cumsum(difere)))
espa
df %>%
group_by(country) %>%
select(country, year, lifeExp) %>%
mutate(lifeExp_gain_cada_lustro = lifeExp - lag(lifeExp)) %>%
#--- 2 filas nuevas
mutate(lifeExp_gain_cada_lustro2 = if_else(is.na(lifeExp_gain_cada_lustro), 0, lifeExp_gain_cada_lustro)) %>%
mutate(lifeExp_gain_acumulado = cumsum(lifeExp_gain_cada_lustro2)) %>%
filter(country == "Spain")
espa
espa <- df |>
filter(country == "Spain") |>
select(year, lifeExp) |>
mutate(difere = lifeExp - lag(lifeExp)) |>
mutate(firereacu = if_else(is.na(difere), 0, cumsum(difere, na.rm = T)))
espa
espa <- df |>
filter(country == "Spain") |>
select(year, lifeExp) |>
mutate(difere = lifeExp - lag(lifeExp)) |>
mutate(firereacu = if_else(is.na(difere), 0, cumsum(difere), na.rm = T))
espa
library(tidyverse)
df %>%
group_by(continent, year)  %>%
mutate (media_lifeExp = mean(lifeExp)) %>%
mutate (media_gdpPercap = mean(gdpPercap)) %>%
mutate(GOOD_or_BAD = case_when(
lifeExp > mean(lifeExp) & gdpPercap > mean(gdpPercap)  ~ "good",
lifeExp < mean(lifeExp) & gdpPercap < mean(gdpPercap)  ~ "bad" ,
lifeExp < mean(lifeExp) | gdpPercap < mean(gdpPercap)  ~ "medium"
)) %>%
filter(country == "Spain")
library(tidyverse)
library(cluster)
library(factoextra)
data("USArrests")
df <- scale(USArrests)
View(df)
View(USArrests)
head(scale(n=3))
head(df(n=3))
head(df, n=3)
df <- na.omit(df)
fviz_nbclust(df, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)
fviz_nbclust(df, kmeans, method = "wss")
fviz_nbclust(df, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)
set.seed(123)
km.res <- kmeans(df, 4, nstart = 25)
km.res
library(tv)
install.packages("tv")
library(tv)
data(tv)
?tv
help(tv)
ls(tv)
data()
file.choose()
setwd("C:\\Users\\gabar\\OneDrive\\Documentos\\R ejercicios\\Camverdes")
getwd()
library(tidy)
library(tidyverse)
campanas_verdes <- read.csv("campanas-verdes.csv", header = T, sep = ",")
View(campanas_verdes)
str(campanas_verdes)
campanas_verdes <- select(campanas_verdes, barrio, comuna)
summarise(campanas_verdes)
summary(campanas_verdes)
por_barrio <- campanas_verdes |>
count(barrio)
View(por_barrio)
View(por_barrio)
por_barrio <- campanas_verdes |>
count(barrio, comuna)
View(por_barrio)
unique(campanas_verdes)
sort(unique(campanas_verdes))
arrange(unique(campanas_verdes))
unique(campanas_verdes) |>
arrange(barrio)
campanas <- read.csv("camverdes.csv",header = T, sep = ",")
names(campanas)
#campanas <- select(direccion, campanas, barrio, Comuna)
head(campanas)
por_comuna <- campanas %>%
group_by(Comuna) %>%
summarise(Cant_por_comuna = n()) %>%
arrange(Cant_por_comuna)
por_comuna
por_comunaf <- factor(por_comuna)
por_barrio <- campanas %>%
group_by(barrio) %>%
summarise(Cant_por_barrio = n()) %>%
arrange(Cant_por_barrio)
round(mean(por_barrio$Cant_por_barrio))
pb6 <- head(por_barrio, 6)
pb6
pbu6<- tail(por_barrio, 6)
pbu6
View(pb6)
View(pbu6)
campanas %>%
group_by(Comuna) %>%
summarise(conteo = n(),
Mayor_cant_barrio = max(n=(barrio)),
Menor_cant_barrio = min(n=(barrio)),
)
censo <- read.csv("censocaba2022.csv", header = T, sep = ",")
censo <- mutate(censo, viviparti = Total.de.viviendas.particulares)
censo <- mutate(censo, vivicole = Total.de.viviendas.colectivas)
censo <- mutate(censo, poblacion = Total.de.población)
#View(censo)
censo <- mutate(censo, vivienda = viviparti + vivicole)
censo <- select(censo, Comuna, vivienda, poblacion)
campanaycenso <- campanas %>%
left_join(censo, by = "Comuna")
View(campanas_verdes)
View(campanaycenso)
campanaycenso <- campanaycenso |>
mutate(pob_viv = poblacion/vivienda)
head(campanaycenso)
View(campanaycenso)
campanaycenso <- por_comuna %>%
left_join(censo, by = "Comuna")
View(campanaycenso)
campanaycenso <- campanaycenso |>
mutate(pob_viv = poblacion/vivienda)
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion))+
coord_flip()
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_viv))+
coord_flip()
campanaycenso <- campanaycenso |>
mutate(pob_viv = poblacion/Cant_por_comuna)
View(campanaycenso)
campanaycenso <- campanaycenso |>
mutate(pob_cant = poblacion/Cant_por_comuna)
campanaycenso <- campanas %>%
left_join(censo, by = "Comuna")
campanaycenso <- por_comuna %>%
left_join(censo, by = "Comuna")
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion))+
coord_flip()
campanaycenso <- por_comuna %>%
left_join(censo, by = "Comuna")
head(campanaycenso)
View(campanaycenso)
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion))+
coord_flip()
campanaycenso <- campanaycenso |>
mutate(pob_cant = poblacion/Cant_por_comuna)
View(campanaycenso)
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de campana sobre población por comuna",
caption = "Reciclemos",
x="Comuna",
y="Campanas / Población")
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(campanaycenso)+
stat_count(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
stat_count(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
geom_bar(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
stat_count(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
stat_count(mapping = aes(y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
stat_count(mapping = aes(x = Comuna))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
geom_bar(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = stat(pob_cant), group = 1))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_cant))+
fill(colors())
ggplot(data = campanaycenso)+
geom_col(mapping = aes(x = Comuna, fill = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = pob_cant))+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
View(campanas)
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion, fill=color))+
coord_flip()
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion, fill= Color))+
coord_flip()
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion))+
coord_flip()
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion))+
coord_flip()+
theme_classic()
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion), fill="blue")+
coord_flip()+
theme_classic()+
```
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion, fill="blue"))+
coord_flip()+
theme_classic()+
```
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, fill="blue"))+
coord_flip()+
theme_classic()+
```
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion))+
coord_flip()+
theme_classic()+
```
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion))+
coord_flip()+
theme_classic()
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, y = poblacion, fill = "blue"))+
coord_flip()+
theme_classic()
ggplot(campanaycenso)+
geom_col(mapping = aes(x = Comuna, fill = poblacion))+
coord_flip()+
theme_classic()
ggplot(campanaycenso, mapping = aes(x = Comuna, y = poblacion))+
geom_col()+
coord_flip()+
theme_classic()
ggplot(campanaycenso, mapping = aes(x = Comuna, y = poblacion))+
geom_col()+
coord_flip()+
theme_classic()
ggplot(campanaycenso, mapping = aes(x = Comuna, y = poblacion))+
geom_col(fill= "blue")+
coord_flip()+
theme_classic()
ggplot(campanaycenso, mapping = aes(x = Comuna, y = poblacion))+
geom_col(fill= "colours")+
coord_flip()+
theme_classic()
ggplot(campanaycenso, mapping = aes(x = Comuna, y = poblacion))+
geom_col(fill= "blue")+
coord_flip()+
theme_classic()
ggplot(data = campanaycenso, mapping = aes(x = Comuna, y = pob_cant))+
geom_col(fill="green")+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(data = campanaycenso, mapping = aes(x = Comuna, y = pob_cant))+
geom_col(fill="#58D68D")+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
ggplot(campanaycenso, mapping = aes(x = Comuna, y = poblacion))+
geom_col(fill= "#58D68D")+
coord_flip()+
theme_classic()
campanaycenso <- campanaycenso |>
mutate(pob_cant = poblacion/Cant_por_comuna) |>
arrange(pob_cant)
ggplot(data = campanaycenso, mapping = aes(x = Comuna, y = pob_cant))+
geom_col(fill="#58D68D")+
coord_flip()+
labs(title = "Relación de la población por campana en cada comuna",
caption = "Reciclemos",
x="Comuna",
y="Personas / campanas")+
theme_classic()
head(campanaycenso,6)
campanaycenso
names(campanas)
names(campanas)
#campanas <- select(direccion, campanas, barrio, Comuna)
campanas <- select(direccion, campanas, barrio, Comuna)
campanas <- select(barrio, Comuna)
campanas <- select(campana, barrio, Comuna)
campanas <- select(campanas, barrio, Comuna)
head(campanas)
por_comuna <- campanas %>%
group_by(Comuna) %>%
summarise(Cant_por_comuna = n()) %>%
arrange(Cant_por_comuna)
por_comuna
por_barrio <- campanas %>%
group_by(barrio) %>%
summarise(Cant_por_barrio = n()) %>%
arrange(Cant_por_barrio)
por_barrio <- campanas %>%
group_by(barrio) %>%
summarise(Cant_por_barrio = n()) %>%
arrange(Cant_por_barrio)
por_barrio <- campanas %>%
group_by(barrio) %>%
summarise(Cant_por_barrio = n()) %>%
arrange(Cant_por_barrio)
por_barrio
por_barrio <- campanas |>
group_by(barrio)
por_barrio <- campanas %>%
group_by(barrio) %>%
summarise(Cant_por_barrio = n()) %>%
arrange(Cant_por_barrio)
por_barrio
por_barrio <- campanas |>
group_by(barrio) |>
summarise(Cant_por_barrio = n())
library(tidyverse)
library(tidyverse)
setwd("C:/Users/gabar/OneDrive/Documentos/R ejercicios/Camverdes")
setwd("C:/Users/gabar/OneDrive/Documentos/R ejercicios/Camverdes")
